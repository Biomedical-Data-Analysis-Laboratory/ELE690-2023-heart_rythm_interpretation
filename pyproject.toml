[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cardiac_rythm"
dynamic = ["version"]
description = 'Cardiac Rythm Interpretation'
readme = "README.md"
requires-python = ">=3.10, <3.12"
keywords = []
authors = [
  { name = "Halvor Kvamme", email = "flkz@proton.me" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "tensorflow>=2.12,<2.13",
    "numpy>=1.22,<1.24",
    "pandas~=2.1.0",
    "matplotlib~=3.7.3",
    "seaborn~=0.12.2",
    "scikit-learn~=1.3.0",
    "scipy~=1.11.2",
    "ipykernel~=6.25.2",
    "jupyter~=1.0.0",
    "pydot>=1.4.2",
    "dataclasses-json>=0.6.1",
    "keras-tuner>=1.4.5",
]

[tool.pdm.scripts]
bandit_ = "bandit --r -ll src"
mypy_ = "mypy src/"
lint.composite = ["mypy_", "bandit_"]

[tool.pdm.dev-dependencies]
lint = [
    "mypy>=1.6.1",
    "bandit>=1.7.5",
]
dev = [
    "pandas-stubs>=2.0.1.230501",
]
[project.urls]
Documentation = "https://github.com/halli2/heart_rythm_interpretation#readme"
Issues = "https://github.com/halli2/heart_rythm_interpretation/issues"
Source = "https://github.com/halli2/heart_rythm_interpretation"

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["cardiac_rythm"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
files = "src"
